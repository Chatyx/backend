definitions:
  httputil.Error:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  v1.Credentials:
    properties:
      password:
        maxLength: 27
        minLength: 8
        type: string
      username:
        maxLength: 50
        type: string
    required:
    - password
    - username
    type: object
  v1.RefreshToken:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  v1.TokenPair:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1.UserCreate:
    properties:
      bio:
        maxLength: 10000
        type: string
      birth_date:
        type: string
      email:
        maxLength: 255
        type: string
      first_name:
        maxLength: 50
        type: string
      last_name:
        maxLength: 50
        type: string
      password:
        maxLength: 27
        minLength: 8
        type: string
      username:
        maxLength: 50
        type: string
    required:
    - email
    - password
    - username
    type: object
  v1.UserDetail:
    properties:
      bio:
        type: string
      birth_date:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      username:
        type: string
    type: object
  v1.UserList:
    properties:
      data:
        items:
          $ref: '#/definitions/v1.UserDetail'
        type: array
      total:
        type: integer
    type: object
  v1.UserUpdate:
    properties:
      bio:
        maxLength: 10000
        type: string
      birth_date:
        type: string
      email:
        maxLength: 255
        type: string
      first_name:
        maxLength: 50
        type: string
      last_name:
        maxLength: 50
        type: string
      username:
        maxLength: 50
        type: string
    required:
    - email
    - username
    type: object
  v1.UserUpdatePassword:
    properties:
      current_password:
        maxLength: 27
        minLength: 8
        type: string
      new_password:
        maxLength: 27
        minLength: 8
        type: string
    required:
    - current_password
    - new_password
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Direct authentication by username and password. Successful
      parameters:
      - description: Fingerprint header
        in: header
        name: fingerprint
        required: true
        type: string
      - description: Credentials body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TokenPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/httputil.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.Error'
      summary: User authentication
      tags:
      - auth
  /auth/token:
    post:
      consumes:
      - application/json
      description: Allows to get a pair of tokens (access and refresh)  by exchanging
        an existing token.
      parameters:
      - description: Fingerprint header
        in: header
        name: fingerprint
        required: true
        type: string
      - description: Refresh token body
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.RefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.TokenPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.Error'
      summary: Refresh authorization token
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UserList'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.Error'
      summary: List all existing users
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: Body to create
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.UserCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UserDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.Error'
      summary: Create a new user
      tags:
      - users
  /users/{user_id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User identity
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UserDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.Error'
      summary: Get a specified user
      tags:
      - users
  /users/me:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.Error'
      summary: Delete the current authenticated user
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: Body to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.UserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.UserDetail'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/httputil.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.Error'
      summary: Update information about the current authenticated user
      tags:
      - users
  /users/me/password:
    patch:
      consumes:
      - application/json
      parameters:
      - description: Body to update
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.UserUpdatePassword'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httputil.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httputil.Error'
      summary: Update the current authenticated user's password
      tags:
      - users
swagger: "2.0"
