// Code generated by mockery v2.40.1. DO NOT EDIT.

package service

import (
	context "context"

	entity "github.com/Chatyx/backend/internal/entity"
	mock "github.com/stretchr/testify/mock"
)

// MockGroupParticipantEventProducer is an autogenerated mock type for the GroupParticipantEventProducer type
type MockGroupParticipantEventProducer struct {
	mock.Mock
}

// Produce provides a mock function with given fields: ctx, event
func (_m *MockGroupParticipantEventProducer) Produce(ctx context.Context, event entity.ParticipantEvent) error {
	ret := _m.Called(ctx, event)

	if len(ret) == 0 {
		panic("no return value specified for Produce")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.ParticipantEvent) error); ok {
		r0 = rf(ctx, event)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMockGroupParticipantEventProducer creates a new instance of MockGroupParticipantEventProducer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockGroupParticipantEventProducer(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockGroupParticipantEventProducer {
	mock := &MockGroupParticipantEventProducer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
